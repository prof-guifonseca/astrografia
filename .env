# Variáveis de Ambiente para Astrografia API

# Chave secreta para Flask e extensões (CSRF, sessions, etc.) - NÃO USADA DIRETAMENTE POR JWT
# SECRET_KEY=gera_uma_chave_forte_aqui

# Chave secreta para JWT (JSON Web Tokens) - OBRIGATÓRIO
JWT_SECRET_KEY=sua_chave_secreta_jwt_super_segura_aqui

# URL de conexão com o banco de dados (SQLAlchemy)
# Padrão para desenvolvimento (SQLite no diretório raiz do backend)
DATABASE_URL=sqlite:///astrografia_dev.db
# Exemplo para PostgreSQL (ajuste usuário, senha, host, porta, dbname)
# DATABASE_URL=postgresql://user:password@host:port/dbname
# Exemplo para Testes (se não usar :memory: ou tempfile)
# TEST_DATABASE_URL=sqlite:///astrografia_test.db

# Configuração de CORS (Cross-Origin Resource Sharing)
# Lista de origens permitidas separadas por vírgula. Use * para permitir tudo (NÃO recomendado em produção).
# CORS_ORIGINS=http://localhost:3000,http://127.0.0.1:3000,https://seu-frontend.com
CORS_ORIGINS=*

# Caminho para os arquivos de efemérides do Kerykeion (se necessário sobrescrever o padrão da lib)
# Kerykeion geralmente busca em locais padrão ou pode ser configurado programaticamente.
# O Dockerfile definirá KEPHEMERIS_PATH=/app/ephe dentro do container.
# KEPHEMERIS_PATH=/caminho/para/sua/pasta/ephe

# Ambiente Flask (development, testing, production)
# Usado para carregar a configuração correta de config.py
# FLASK_ENV=development

